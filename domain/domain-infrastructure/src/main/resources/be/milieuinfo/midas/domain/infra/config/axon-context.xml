<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd">

    <axon:annotation-config/>

    <bean id="entityManagerProvider" class="org.axonframework.common.jpa.ContainerManagedEntityManagerProvider"/>

    <bean id="axonTransactionManager" class="org.axonframework.unitofwork.SpringTransactionManager">
        <constructor-arg name="transactionManager" ref="transactionManager"/>
    </bean>


    <bean id="axonExecutor" class="java.util.concurrent.ScheduledThreadPoolExecutor">
        <!--
            corePoolSize : The number of threads to keep in the pool, even if they are idle, unless {@code allowCoreThreadTimeOut} is set
        -->
        <constructor-arg index="0" value="5"/>
        <property name="maximumPoolSize" value="20"/>
    </bean>


    <!--    EVENTS  -->

    <bean id="eventBus" class="org.axonframework.eventhandling.ClusteringEventBus">
        <constructor-arg name="clusterSelector">
            <bean class="org.axonframework.eventhandling.DefaultClusterSelector">
                <constructor-arg name="defaultCluster">
                    <bean class="org.axonframework.eventhandling.async.AsynchronousCluster">
                        <constructor-arg name="identifier" value="midas-eventbus"/>
                        <constructor-arg name="executor" ref="axonExecutor"/>
                        <constructor-arg name="transactionManager" ref="axonTransactionManager"/>
                        <constructor-arg name="sequencingPolicy">
                            <bean class="org.axonframework.eventhandling.async.SequentialPerAggregatePolicy"/>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean class="org.axonframework.eventhandling.annotation.AnnotationEventListenerBeanPostProcessor">
        <property name="eventBus" ref="eventBus"/>
    </bean>

    <axon:jpa-event-store id="eventStore" entity-manager-provider="entityManagerProvider"/>


    <!--    COMMANDS    -->

    <bean id="axonBeanValidator" class="org.axonframework.commandhandling.interceptors.BeanValidationInterceptor">
        <constructor-arg name="validatorFactory">
            <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
        </constructor-arg>
    </bean>

    <bean id="auditingInterceptor" class="org.axonframework.auditing.AuditingInterceptor">
        <property name="auditDataProvider">
            <bean class="be.milieuinfo.midas.infra.axon.CommandMetadataAuditDataProvider"/>
        </property>
    </bean>

    <bean id="commandBus" class="org.axonframework.commandhandling.AsynchronousCommandBus">
        <constructor-arg name="executor" ref="axonExecutor"/>
        <property name="transactionManager" ref="axonTransactionManager"/>
        <property name="dispatchInterceptors">
            <list>
                <ref bean="axonBeanValidator"/>
                <bean class="be.milieuinfo.midas.infra.axon.CommandMetaDataInterceptor"/>
            </list>
        </property>
        <property name="handlerInterceptors">
            <list>
                <ref bean="auditingInterceptor"/>
                <bean class="org.axonframework.commandhandling.interceptors.LoggingInterceptor"/>
            </list>
        </property>
    </bean>

    <bean class="org.axonframework.commandhandling.annotation.AnnotationCommandHandlerBeanPostProcessor">
        <property name="commandBus" ref="commandBus"/>
    </bean>

    <bean class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBus"/>
        <property name="gatewayInterface" value="com.telemis.bowling.domain.api.CommandGateway"/>
    </bean>


    <!--    SNAPSHOT    -->

    <bean id="snapshotEventStore" class="org.axonframework.eventstore.jpa.JpaEventStore">
        <constructor-arg name="entityManagerProvider" ref="entityManagerProvider"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <axon:snapshotter id="snapshotter" event-store="snapshotEventStore" executor="axonExecutor"/>

    <!--
    The number of events that will trigger the creation of a snapshot events. Defaults to 50.
    -->
    <bean id="snapshotTriggerCount" class="java.lang.Integer">
    <constructor-arg value="1"/>
    </bean>

    <bean class="org.axonframework.eventsourcing.EventCountSnapshotterTrigger">
    <property name="snapshotter" ref="snapshotter"/>
    <property name="trigger" ref="snapshotTriggerCount"/>
    </bean>


    <!--    SAGA    -->

    <bean id="resourceInjector" class="org.axonframework.saga.spring.SpringResourceInjector"/>

    <bean class="org.axonframework.saga.GenericSagaFactory">
        <property name="resourceInjector" ref="resourceInjector"/>
    </bean>

    <axon:jpa-saga-repository id="sagaRepository" entity-manager-provider="entityManagerProvider"/>

    <axon:jpa-saga-repository resource-injector="resourceInjector"
                              use-explicit-flush="true"/>

    <axon:saga-manager id="sagaManager" saga-repository="sagaRepository" resource-injector="resourceInjector">
        <axon:types>
            be.milieuinfo.midas.domain.procedure.controle.ControleSaga
        </axon:types>
    </axon:saga-manager>


</beans>